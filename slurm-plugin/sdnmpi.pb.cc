// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdnmpi.proto

#include "sdnmpi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class JobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job>
      _instance;
} _Job_default_instance_;
class ProcessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Process>
      _instance;
} _Process_default_instance_;
class ListJobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListJobResponse>
      _instance;
} _ListJobResponse_default_instance_;
class GetJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJobRequest>
      _instance;
} _GetJobRequest_default_instance_;
class GetJobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJobResponse>
      _instance;
} _GetJobResponse_default_instance_;
class CreateJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateJobRequest>
      _instance;
} _CreateJobRequest_default_instance_;
class StartJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartJobRequest>
      _instance;
} _StartJobRequest_default_instance_;
class FinishJobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FinishJobRequest>
      _instance;
} _FinishJobRequest_default_instance_;
class ListProcessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListProcessRequest>
      _instance;
} _ListProcessRequest_default_instance_;
class ListProcessResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListProcessResponse>
      _instance;
} _ListProcessResponse_default_instance_;
class GetProcessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetProcessRequest>
      _instance;
} _GetProcessRequest_default_instance_;
class GetProcessResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetProcessResponse>
      _instance;
} _GetProcessResponse_default_instance_;
class CreateProcessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateProcessRequest>
      _instance;
} _CreateProcessRequest_default_instance_;
class StartProcessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartProcessRequest>
      _instance;
} _StartProcessRequest_default_instance_;
class FinishProcessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FinishProcessRequest>
      _instance;
} _FinishProcessRequest_default_instance_;
namespace protobuf_sdnmpi_2eproto {
void InitDefaultsEmptyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Empty_default_instance_;
    new (ptr) ::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Empty::InitAsDefaultInstance();
}

void InitDefaultsEmpty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmptyImpl);
}

void InitDefaultsJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Job_default_instance_;
    new (ptr) ::Job();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Job::InitAsDefaultInstance();
}

void InitDefaultsJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJobImpl);
}

void InitDefaultsProcessImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Process_default_instance_;
    new (ptr) ::Process();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Process::InitAsDefaultInstance();
}

void InitDefaultsProcess() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessImpl);
}

void InitDefaultsListJobResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sdnmpi_2eproto::InitDefaultsJob();
  {
    void* ptr = &::_ListJobResponse_default_instance_;
    new (ptr) ::ListJobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListJobResponse::InitAsDefaultInstance();
}

void InitDefaultsListJobResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListJobResponseImpl);
}

void InitDefaultsGetJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetJobRequest_default_instance_;
    new (ptr) ::GetJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetJobRequest::InitAsDefaultInstance();
}

void InitDefaultsGetJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetJobRequestImpl);
}

void InitDefaultsGetJobResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sdnmpi_2eproto::InitDefaultsJob();
  {
    void* ptr = &::_GetJobResponse_default_instance_;
    new (ptr) ::GetJobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetJobResponse::InitAsDefaultInstance();
}

void InitDefaultsGetJobResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetJobResponseImpl);
}

void InitDefaultsCreateJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sdnmpi_2eproto::InitDefaultsJob();
  {
    void* ptr = &::_CreateJobRequest_default_instance_;
    new (ptr) ::CreateJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateJobRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateJobRequestImpl);
}

void InitDefaultsStartJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StartJobRequest_default_instance_;
    new (ptr) ::StartJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StartJobRequest::InitAsDefaultInstance();
}

void InitDefaultsStartJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartJobRequestImpl);
}

void InitDefaultsFinishJobRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_FinishJobRequest_default_instance_;
    new (ptr) ::FinishJobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FinishJobRequest::InitAsDefaultInstance();
}

void InitDefaultsFinishJobRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFinishJobRequestImpl);
}

void InitDefaultsListProcessRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ListProcessRequest_default_instance_;
    new (ptr) ::ListProcessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListProcessRequest::InitAsDefaultInstance();
}

void InitDefaultsListProcessRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListProcessRequestImpl);
}

void InitDefaultsListProcessResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sdnmpi_2eproto::InitDefaultsProcess();
  {
    void* ptr = &::_ListProcessResponse_default_instance_;
    new (ptr) ::ListProcessResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListProcessResponse::InitAsDefaultInstance();
}

void InitDefaultsListProcessResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListProcessResponseImpl);
}

void InitDefaultsGetProcessRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetProcessRequest_default_instance_;
    new (ptr) ::GetProcessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetProcessRequest::InitAsDefaultInstance();
}

void InitDefaultsGetProcessRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetProcessRequestImpl);
}

void InitDefaultsGetProcessResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sdnmpi_2eproto::InitDefaultsProcess();
  {
    void* ptr = &::_GetProcessResponse_default_instance_;
    new (ptr) ::GetProcessResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetProcessResponse::InitAsDefaultInstance();
}

void InitDefaultsGetProcessResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetProcessResponseImpl);
}

void InitDefaultsCreateProcessRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sdnmpi_2eproto::InitDefaultsProcess();
  {
    void* ptr = &::_CreateProcessRequest_default_instance_;
    new (ptr) ::CreateProcessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateProcessRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateProcessRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateProcessRequestImpl);
}

void InitDefaultsStartProcessRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_StartProcessRequest_default_instance_;
    new (ptr) ::StartProcessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StartProcessRequest::InitAsDefaultInstance();
}

void InitDefaultsStartProcessRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartProcessRequestImpl);
}

void InitDefaultsFinishProcessRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_FinishProcessRequest_default_instance_;
    new (ptr) ::FinishProcessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FinishProcessRequest::InitAsDefaultInstance();
}

void InitDefaultsFinishProcessRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFinishProcessRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, comm_pattern_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, n_tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Job, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process, node_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Process, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ListJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ListJobResponse, jobs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetJobRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetJobResponse, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateJobRequest, job_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartJobRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FinishJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FinishJobRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ListProcessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ListProcessRequest, job_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ListProcessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ListProcessResponse, processes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetProcessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetProcessRequest, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetProcessRequest, rank_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetProcessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetProcessResponse, process_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateProcessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateProcessRequest, process_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartProcessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartProcessRequest, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StartProcessRequest, rank_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FinishProcessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FinishProcessRequest, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FinishProcessRequest, rank_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Empty)},
  { 5, -1, sizeof(::Job)},
  { 17, -1, sizeof(::Process)},
  { 27, -1, sizeof(::ListJobResponse)},
  { 33, -1, sizeof(::GetJobRequest)},
  { 39, -1, sizeof(::GetJobResponse)},
  { 45, -1, sizeof(::CreateJobRequest)},
  { 51, -1, sizeof(::StartJobRequest)},
  { 57, -1, sizeof(::FinishJobRequest)},
  { 63, -1, sizeof(::ListProcessRequest)},
  { 69, -1, sizeof(::ListProcessResponse)},
  { 75, -1, sizeof(::GetProcessRequest)},
  { 82, -1, sizeof(::GetProcessResponse)},
  { 88, -1, sizeof(::CreateProcessRequest)},
  { 94, -1, sizeof(::StartProcessRequest)},
  { 101, -1, sizeof(::FinishProcessRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Job_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Process_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ListJobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetJobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StartJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FinishJobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ListProcessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ListProcessResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetProcessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetProcessResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateProcessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StartProcessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FinishProcessRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sdnmpi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014sdnmpi.proto\"\007\n\005Empty\"z\n\003Job\022\n\n\002id\030\001 \001"
      "(\r\022\014\n\004name\030\002 \001(\t\022\013\n\003uid\030\003 \001(\r\022\013\n\003gid\030\004 \001"
      "(\r\022\024\n\014comm_pattern\030\005 \001(\t\022\017\n\007n_tasks\030\006 \001("
      "\r\022\030\n\005state\030\007 \001(\0162\t.JobState\"i\n\007Process\022\016"
      "\n\006job_id\030\001 \001(\r\022\014\n\004rank\030\002 \001(\r\022\017\n\007node_id\030"
      "\003 \001(\r\022\021\n\tnode_name\030\004 \001(\t\022\034\n\005state\030\005 \001(\0162"
      "\r.ProcessState\"%\n\017ListJobResponse\022\022\n\004job"
      "s\030\001 \003(\0132\004.Job\"\033\n\rGetJobRequest\022\n\n\002id\030\001 \001"
      "(\r\"#\n\016GetJobResponse\022\021\n\003job\030\001 \001(\0132\004.Job\""
      "%\n\020CreateJobRequest\022\021\n\003job\030\001 \001(\0132\004.Job\"\035"
      "\n\017StartJobRequest\022\n\n\002id\030\001 \001(\r\"\036\n\020FinishJ"
      "obRequest\022\n\n\002id\030\001 \001(\r\"$\n\022ListProcessRequ"
      "est\022\016\n\006job_id\030\001 \001(\r\"2\n\023ListProcessRespon"
      "se\022\033\n\tprocesses\030\001 \003(\0132\010.Process\"1\n\021GetPr"
      "ocessRequest\022\016\n\006job_id\030\001 \001(\r\022\014\n\004rank\030\002 \001"
      "(\r\"/\n\022GetProcessResponse\022\031\n\007process\030\001 \001("
      "\0132\010.Process\"1\n\024CreateProcessRequest\022\031\n\007p"
      "rocess\030\001 \001(\0132\010.Process\"3\n\023StartProcessRe"
      "quest\022\016\n\006job_id\030\001 \001(\r\022\014\n\004rank\030\002 \001(\r\"4\n\024F"
      "inishProcessRequest\022\016\n\006job_id\030\001 \001(\r\022\014\n\004r"
      "ank\030\002 \001(\r*>\n\010JobState\022\017\n\013JOB_PENDING\020\000\022\017"
      "\n\013JOB_RUNNING\020\001\022\020\n\014JOB_COMPLETE\020\002*N\n\014Pro"
      "cessState\022\023\n\017PROCESS_PENDING\020\000\022\023\n\017PROCES"
      "S_RUNNING\020\001\022\024\n\020PROCESS_COMPLETE\020\0022\341\003\n\006SD"
      "NMPI\022%\n\007ListJob\022\006.Empty\032\020.ListJobRespons"
      "e\"\000\022+\n\006GetJob\022\016.GetJobRequest\032\017.GetJobRe"
      "sponse\"\000\022(\n\tCreateJob\022\021.CreateJobRequest"
      "\032\006.Empty\"\000\022&\n\010StartJob\022\020.StartJobRequest"
      "\032\006.Empty\"\000\022(\n\tFinishJob\022\021.FinishJobReque"
      "st\032\006.Empty\"\000\022:\n\013ListProcess\022\023.ListProces"
      "sRequest\032\024.ListProcessResponse\"\000\0227\n\nGetP"
      "rocess\022\022.GetProcessRequest\032\023.GetProcessR"
      "esponse\"\000\0220\n\rCreateProcess\022\025.CreateProce"
      "ssRequest\032\006.Empty\"\000\022.\n\014StartProcess\022\024.St"
      "artProcessRequest\032\006.Empty\"\000\0220\n\rFinishPro"
      "cess\022\025.FinishProcessRequest\032\006.Empty\"\000b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1445);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sdnmpi.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sdnmpi_2eproto
const ::google::protobuf::EnumDescriptor* JobState_descriptor() {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sdnmpi_2eproto::file_level_enum_descriptors[0];
}
bool JobState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProcessState_descriptor() {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sdnmpi_2eproto::file_level_enum_descriptors[1];
}
bool ProcessState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsEmpty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsEmpty();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job::kIdFieldNumber;
const int Job::kNameFieldNumber;
const int Job::kUidFieldNumber;
const int Job::kGidFieldNumber;
const int Job::kCommPatternFieldNumber;
const int Job::kNTasksFieldNumber;
const int Job::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job::Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Job)
}
Job::Job(const Job& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  comm_pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comm_pattern().size() > 0) {
    comm_pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comm_pattern_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:Job)
}

void Job::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comm_pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _cached_size_ = 0;
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:Job)
  SharedDtor();
}

void Job::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comm_pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Job::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Job::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job& Job::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsJob();
  return *internal_default_instance();
}

Job* Job::New(::google::protobuf::Arena* arena) const {
  Job* n = new Job;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comm_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Job)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Job.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comm_pattern = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comm_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comm_pattern().data(), static_cast<int>(this->comm_pattern().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Job.comm_pattern"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 n_tasks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &n_tasks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .JobState state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::JobState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Job)
  return false;
#undef DO_
}

void Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uid(), output);
  }

  // uint32 gid = 4;
  if (this->gid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gid(), output);
  }

  // string comm_pattern = 5;
  if (this->comm_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comm_pattern().data(), static_cast<int>(this->comm_pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.comm_pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->comm_pattern(), output);
  }

  // uint32 n_tasks = 6;
  if (this->n_tasks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->n_tasks(), output);
  }

  // .JobState state = 7;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Job)
}

::google::protobuf::uint8* Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uid(), target);
  }

  // uint32 gid = 4;
  if (this->gid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gid(), target);
  }

  // string comm_pattern = 5;
  if (this->comm_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comm_pattern().data(), static_cast<int>(this->comm_pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.comm_pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->comm_pattern(), target);
  }

  // uint32 n_tasks = 6;
  if (this->n_tasks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->n_tasks(), target);
  }

  // .JobState state = 7;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Job)
  return target;
}

size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Job)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string comm_pattern = 5;
  if (this->comm_pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comm_pattern());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 gid = 4;
  if (this->gid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gid());
  }

  // uint32 n_tasks = 6;
  if (this->n_tasks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->n_tasks());
  }

  // .JobState state = 7;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Job)
  GOOGLE_DCHECK_NE(&from, this);
  const Job* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Job)
    MergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Job)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.comm_pattern().size() > 0) {

    comm_pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comm_pattern_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.gid() != 0) {
    set_gid(from.gid());
  }
  if (from.n_tasks() != 0) {
    set_n_tasks(from.n_tasks());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job::IsInitialized() const {
  return true;
}

void Job::Swap(Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job::InternalSwap(Job* other) {
  using std::swap;
  name_.Swap(&other->name_);
  comm_pattern_.Swap(&other->comm_pattern_);
  swap(id_, other->id_);
  swap(uid_, other->uid_);
  swap(gid_, other->gid_);
  swap(n_tasks_, other->n_tasks_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Job::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Process::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Process::kJobIdFieldNumber;
const int Process::kRankFieldNumber;
const int Process::kNodeIdFieldNumber;
const int Process::kNodeNameFieldNumber;
const int Process::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Process::Process()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsProcess();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Process)
}
Process::Process(const Process& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_name().size() > 0) {
    node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
  }
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:Process)
}

void Process::SharedCtor() {
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  _cached_size_ = 0;
}

Process::~Process() {
  // @@protoc_insertion_point(destructor:Process)
  SharedDtor();
}

void Process::SharedDtor() {
  node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Process::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Process& Process::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsProcess();
  return *internal_default_instance();
}

Process* Process::New(::google::protobuf::Arena* arena) const {
  Process* n = new Process;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Process::Clear() {
// @@protoc_insertion_point(message_clear_start:Process)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool Process::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Process)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 node_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_name().data(), static_cast<int>(this->node_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Process.node_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProcessState state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::ProcessState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Process)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Process)
  return false;
#undef DO_
}

void Process::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Process)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->job_id(), output);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  // uint32 node_id = 3;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->node_id(), output);
  }

  // string node_name = 4;
  if (this->node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_name().data(), static_cast<int>(this->node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Process.node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->node_name(), output);
  }

  // .ProcessState state = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Process)
}

::google::protobuf::uint8* Process::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Process)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->job_id(), target);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  // uint32 node_id = 3;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->node_id(), target);
  }

  // string node_name = 4;
  if (this->node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_name().data(), static_cast<int>(this->node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Process.node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->node_name(), target);
  }

  // .ProcessState state = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Process)
  return target;
}

size_t Process::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Process)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string node_name = 4;
  if (this->node_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_name());
  }

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job_id());
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  // uint32 node_id = 3;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  // .ProcessState state = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Process)
  GOOGLE_DCHECK_NE(&from, this);
  const Process* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Process>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Process)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Process)
    MergeFrom(*source);
  }
}

void Process::MergeFrom(const Process& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Process)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_name().size() > 0) {

    node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
  }
  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Process::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process::CopyFrom(const Process& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process::IsInitialized() const {
  return true;
}

void Process::Swap(Process* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Process::InternalSwap(Process* other) {
  using std::swap;
  node_name_.Swap(&other->node_name_);
  swap(job_id_, other->job_id_);
  swap(rank_, other->rank_);
  swap(node_id_, other->node_id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Process::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListJobResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListJobResponse::kJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListJobResponse::ListJobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsListJobResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListJobResponse)
}
ListJobResponse::ListJobResponse(const ListJobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jobs_(from.jobs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ListJobResponse)
}

void ListJobResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListJobResponse::~ListJobResponse() {
  // @@protoc_insertion_point(destructor:ListJobResponse)
  SharedDtor();
}

void ListJobResponse::SharedDtor() {
}

void ListJobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListJobResponse::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListJobResponse& ListJobResponse::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsListJobResponse();
  return *internal_default_instance();
}

ListJobResponse* ListJobResponse::New(::google::protobuf::Arena* arena) const {
  ListJobResponse* n = new ListJobResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ListJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jobs_.Clear();
  _internal_metadata_.Clear();
}

bool ListJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListJobResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Job jobs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListJobResponse)
  return false;
#undef DO_
}

void ListJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Job jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListJobResponse)
}

::google::protobuf::uint8* ListJobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Job jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListJobResponse)
  return target;
}

size_t ListJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListJobResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Job jobs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListJobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListJobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListJobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListJobResponse)
    MergeFrom(*source);
  }
}

void ListJobResponse::MergeFrom(const ListJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jobs_.MergeFrom(from.jobs_);
}

void ListJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListJobResponse::CopyFrom(const ListJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListJobResponse::IsInitialized() const {
  return true;
}

void ListJobResponse::Swap(ListJobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListJobResponse::InternalSwap(ListJobResponse* other) {
  using std::swap;
  jobs_.InternalSwap(&other->jobs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListJobResponse::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJobRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJobRequest::GetJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsGetJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetJobRequest)
}
GetJobRequest::GetJobRequest(const GetJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:GetJobRequest)
}

void GetJobRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

GetJobRequest::~GetJobRequest() {
  // @@protoc_insertion_point(destructor:GetJobRequest)
  SharedDtor();
}

void GetJobRequest::SharedDtor() {
}

void GetJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJobRequest& GetJobRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsGetJobRequest();
  return *internal_default_instance();
}

GetJobRequest* GetJobRequest::New(::google::protobuf::Arena* arena) const {
  GetJobRequest* n = new GetJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetJobRequest)
  return false;
#undef DO_
}

void GetJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetJobRequest)
}

::google::protobuf::uint8* GetJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetJobRequest)
  return target;
}

size_t GetJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetJobRequest)
    MergeFrom(*source);
  }
}

void GetJobRequest::MergeFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void GetJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobRequest::CopyFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobRequest::IsInitialized() const {
  return true;
}

void GetJobRequest::Swap(GetJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJobRequest::InternalSwap(GetJobRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetJobRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJobResponse::InitAsDefaultInstance() {
  ::_GetJobResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::Job*>(
      ::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJobResponse::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJobResponse::GetJobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsGetJobResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetJobResponse)
}
GetJobResponse::GetJobResponse(const GetJobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job()) {
    job_ = new ::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GetJobResponse)
}

void GetJobResponse::SharedCtor() {
  job_ = NULL;
  _cached_size_ = 0;
}

GetJobResponse::~GetJobResponse() {
  // @@protoc_insertion_point(destructor:GetJobResponse)
  SharedDtor();
}

void GetJobResponse::SharedDtor() {
  if (this != internal_default_instance()) delete job_;
}

void GetJobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobResponse::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJobResponse& GetJobResponse::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsGetJobResponse();
  return *internal_default_instance();
}

GetJobResponse* GetJobResponse::New(::google::protobuf::Arena* arena) const {
  GetJobResponse* n = new GetJobResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  _internal_metadata_.Clear();
}

bool GetJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetJobResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Job job = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetJobResponse)
  return false;
#undef DO_
}

void GetJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Job job = 1;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->job_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetJobResponse)
}

::google::protobuf::uint8* GetJobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetJobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Job job = 1;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->job_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetJobResponse)
  return target;
}

size_t GetJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetJobResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Job job = 1;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetJobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetJobResponse)
    MergeFrom(*source);
  }
}

void GetJobResponse::MergeFrom(const GetJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    mutable_job()->::Job::MergeFrom(from.job());
  }
}

void GetJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobResponse::CopyFrom(const GetJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobResponse::IsInitialized() const {
  return true;
}

void GetJobResponse::Swap(GetJobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJobResponse::InternalSwap(GetJobResponse* other) {
  using std::swap;
  swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetJobResponse::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateJobRequest::InitAsDefaultInstance() {
  ::_CreateJobRequest_default_instance_._instance.get_mutable()->job_ = const_cast< ::Job*>(
      ::Job::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateJobRequest::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateJobRequest::CreateJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsCreateJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateJobRequest)
}
CreateJobRequest::CreateJobRequest(const CreateJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_job()) {
    job_ = new ::Job(*from.job_);
  } else {
    job_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CreateJobRequest)
}

void CreateJobRequest::SharedCtor() {
  job_ = NULL;
  _cached_size_ = 0;
}

CreateJobRequest::~CreateJobRequest() {
  // @@protoc_insertion_point(destructor:CreateJobRequest)
  SharedDtor();
}

void CreateJobRequest::SharedDtor() {
  if (this != internal_default_instance()) delete job_;
}

void CreateJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateJobRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateJobRequest& CreateJobRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsCreateJobRequest();
  return *internal_default_instance();
}

CreateJobRequest* CreateJobRequest::New(::google::protobuf::Arena* arena) const {
  CreateJobRequest* n = new CreateJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Job job = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateJobRequest)
  return false;
#undef DO_
}

void CreateJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Job job = 1;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->job_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateJobRequest)
}

::google::protobuf::uint8* CreateJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Job job = 1;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->job_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateJobRequest)
  return target;
}

size_t CreateJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Job job = 1;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateJobRequest)
    MergeFrom(*source);
  }
}

void CreateJobRequest::MergeFrom(const CreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    mutable_job()->::Job::MergeFrom(from.job());
  }
}

void CreateJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateJobRequest::CopyFrom(const CreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateJobRequest::IsInitialized() const {
  return true;
}

void CreateJobRequest::Swap(CreateJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateJobRequest::InternalSwap(CreateJobRequest* other) {
  using std::swap;
  swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateJobRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartJobRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartJobRequest::StartJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsStartJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StartJobRequest)
}
StartJobRequest::StartJobRequest(const StartJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:StartJobRequest)
}

void StartJobRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

StartJobRequest::~StartJobRequest() {
  // @@protoc_insertion_point(destructor:StartJobRequest)
  SharedDtor();
}

void StartJobRequest::SharedDtor() {
}

void StartJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartJobRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartJobRequest& StartJobRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsStartJobRequest();
  return *internal_default_instance();
}

StartJobRequest* StartJobRequest::New(::google::protobuf::Arena* arena) const {
  StartJobRequest* n = new StartJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StartJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool StartJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StartJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StartJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StartJobRequest)
  return false;
#undef DO_
}

void StartJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StartJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StartJobRequest)
}

::google::protobuf::uint8* StartJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StartJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StartJobRequest)
  return target;
}

size_t StartJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StartJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StartJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StartJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StartJobRequest)
    MergeFrom(*source);
  }
}

void StartJobRequest::MergeFrom(const StartJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StartJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void StartJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StartJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartJobRequest::CopyFrom(const StartJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StartJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartJobRequest::IsInitialized() const {
  return true;
}

void StartJobRequest::Swap(StartJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartJobRequest::InternalSwap(StartJobRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartJobRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FinishJobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishJobRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishJobRequest::FinishJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsFinishJobRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FinishJobRequest)
}
FinishJobRequest::FinishJobRequest(const FinishJobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:FinishJobRequest)
}

void FinishJobRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

FinishJobRequest::~FinishJobRequest() {
  // @@protoc_insertion_point(destructor:FinishJobRequest)
  SharedDtor();
}

void FinishJobRequest::SharedDtor() {
}

void FinishJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishJobRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishJobRequest& FinishJobRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsFinishJobRequest();
  return *internal_default_instance();
}

FinishJobRequest* FinishJobRequest::New(::google::protobuf::Arena* arena) const {
  FinishJobRequest* n = new FinishJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FinishJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool FinishJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FinishJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FinishJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FinishJobRequest)
  return false;
#undef DO_
}

void FinishJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FinishJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FinishJobRequest)
}

::google::protobuf::uint8* FinishJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FinishJobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FinishJobRequest)
  return target;
}

size_t FinishJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FinishJobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FinishJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FinishJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FinishJobRequest)
    MergeFrom(*source);
  }
}

void FinishJobRequest::MergeFrom(const FinishJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FinishJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void FinishJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FinishJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishJobRequest::CopyFrom(const FinishJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FinishJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishJobRequest::IsInitialized() const {
  return true;
}

void FinishJobRequest::Swap(FinishJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishJobRequest::InternalSwap(FinishJobRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishJobRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListProcessRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListProcessRequest::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListProcessRequest::ListProcessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsListProcessRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListProcessRequest)
}
ListProcessRequest::ListProcessRequest(const ListProcessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_id_ = from.job_id_;
  // @@protoc_insertion_point(copy_constructor:ListProcessRequest)
}

void ListProcessRequest::SharedCtor() {
  job_id_ = 0u;
  _cached_size_ = 0;
}

ListProcessRequest::~ListProcessRequest() {
  // @@protoc_insertion_point(destructor:ListProcessRequest)
  SharedDtor();
}

void ListProcessRequest::SharedDtor() {
}

void ListProcessRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListProcessRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListProcessRequest& ListProcessRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsListProcessRequest();
  return *internal_default_instance();
}

ListProcessRequest* ListProcessRequest::New(::google::protobuf::Arena* arena) const {
  ListProcessRequest* n = new ListProcessRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListProcessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ListProcessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListProcessRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListProcessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListProcessRequest)
  return false;
#undef DO_
}

void ListProcessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->job_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListProcessRequest)
}

::google::protobuf::uint8* ListProcessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->job_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListProcessRequest)
  return target;
}

size_t ListProcessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListProcessRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListProcessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProcessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListProcessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListProcessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListProcessRequest)
    MergeFrom(*source);
  }
}

void ListProcessRequest::MergeFrom(const ListProcessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
}

void ListProcessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProcessRequest::CopyFrom(const ListProcessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProcessRequest::IsInitialized() const {
  return true;
}

void ListProcessRequest::Swap(ListProcessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListProcessRequest::InternalSwap(ListProcessRequest* other) {
  using std::swap;
  swap(job_id_, other->job_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListProcessRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListProcessResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListProcessResponse::kProcessesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListProcessResponse::ListProcessResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsListProcessResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ListProcessResponse)
}
ListProcessResponse::ListProcessResponse(const ListProcessResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      processes_(from.processes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ListProcessResponse)
}

void ListProcessResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListProcessResponse::~ListProcessResponse() {
  // @@protoc_insertion_point(destructor:ListProcessResponse)
  SharedDtor();
}

void ListProcessResponse::SharedDtor() {
}

void ListProcessResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListProcessResponse::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListProcessResponse& ListProcessResponse::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsListProcessResponse();
  return *internal_default_instance();
}

ListProcessResponse* ListProcessResponse::New(::google::protobuf::Arena* arena) const {
  ListProcessResponse* n = new ListProcessResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListProcessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ListProcessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processes_.Clear();
  _internal_metadata_.Clear();
}

bool ListProcessResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ListProcessResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Process processes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_processes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ListProcessResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ListProcessResponse)
  return false;
#undef DO_
}

void ListProcessResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ListProcessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Process processes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->processes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->processes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ListProcessResponse)
}

::google::protobuf::uint8* ListProcessResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ListProcessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Process processes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->processes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->processes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListProcessResponse)
  return target;
}

size_t ListProcessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListProcessResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Process processes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->processes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->processes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListProcessResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListProcessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListProcessResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListProcessResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListProcessResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListProcessResponse)
    MergeFrom(*source);
  }
}

void ListProcessResponse::MergeFrom(const ListProcessResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListProcessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  processes_.MergeFrom(from.processes_);
}

void ListProcessResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListProcessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListProcessResponse::CopyFrom(const ListProcessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListProcessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProcessResponse::IsInitialized() const {
  return true;
}

void ListProcessResponse::Swap(ListProcessResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListProcessResponse::InternalSwap(ListProcessResponse* other) {
  using std::swap;
  processes_.InternalSwap(&other->processes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListProcessResponse::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetProcessRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProcessRequest::kJobIdFieldNumber;
const int GetProcessRequest::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProcessRequest::GetProcessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsGetProcessRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetProcessRequest)
}
GetProcessRequest::GetProcessRequest(const GetProcessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:GetProcessRequest)
}

void GetProcessRequest::SharedCtor() {
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  _cached_size_ = 0;
}

GetProcessRequest::~GetProcessRequest() {
  // @@protoc_insertion_point(destructor:GetProcessRequest)
  SharedDtor();
}

void GetProcessRequest::SharedDtor() {
}

void GetProcessRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProcessRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProcessRequest& GetProcessRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsGetProcessRequest();
  return *internal_default_instance();
}

GetProcessRequest* GetProcessRequest::New(::google::protobuf::Arena* arena) const {
  GetProcessRequest* n = new GetProcessRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProcessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  _internal_metadata_.Clear();
}

bool GetProcessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetProcessRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetProcessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetProcessRequest)
  return false;
#undef DO_
}

void GetProcessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->job_id(), output);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetProcessRequest)
}

::google::protobuf::uint8* GetProcessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->job_id(), target);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetProcessRequest)
  return target;
}

size_t GetProcessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetProcessRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job_id());
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProcessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProcessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProcessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetProcessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetProcessRequest)
    MergeFrom(*source);
  }
}

void GetProcessRequest::MergeFrom(const GetProcessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void GetProcessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProcessRequest::CopyFrom(const GetProcessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProcessRequest::IsInitialized() const {
  return true;
}

void GetProcessRequest::Swap(GetProcessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProcessRequest::InternalSwap(GetProcessRequest* other) {
  using std::swap;
  swap(job_id_, other->job_id_);
  swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProcessRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetProcessResponse::InitAsDefaultInstance() {
  ::_GetProcessResponse_default_instance_._instance.get_mutable()->process_ = const_cast< ::Process*>(
      ::Process::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProcessResponse::kProcessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProcessResponse::GetProcessResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsGetProcessResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetProcessResponse)
}
GetProcessResponse::GetProcessResponse(const GetProcessResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_process()) {
    process_ = new ::Process(*from.process_);
  } else {
    process_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GetProcessResponse)
}

void GetProcessResponse::SharedCtor() {
  process_ = NULL;
  _cached_size_ = 0;
}

GetProcessResponse::~GetProcessResponse() {
  // @@protoc_insertion_point(destructor:GetProcessResponse)
  SharedDtor();
}

void GetProcessResponse::SharedDtor() {
  if (this != internal_default_instance()) delete process_;
}

void GetProcessResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProcessResponse::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProcessResponse& GetProcessResponse::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsGetProcessResponse();
  return *internal_default_instance();
}

GetProcessResponse* GetProcessResponse::New(::google::protobuf::Arena* arena) const {
  GetProcessResponse* n = new GetProcessResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProcessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetProcessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
  _internal_metadata_.Clear();
}

bool GetProcessResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetProcessResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Process process = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetProcessResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetProcessResponse)
  return false;
#undef DO_
}

void GetProcessResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetProcessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Process process = 1;
  if (this->has_process()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->process_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetProcessResponse)
}

::google::protobuf::uint8* GetProcessResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetProcessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Process process = 1;
  if (this->has_process()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->process_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetProcessResponse)
  return target;
}

size_t GetProcessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetProcessResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Process process = 1;
  if (this->has_process()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->process_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProcessResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetProcessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProcessResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProcessResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetProcessResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetProcessResponse)
    MergeFrom(*source);
  }
}

void GetProcessResponse::MergeFrom(const GetProcessResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetProcessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_process()) {
    mutable_process()->::Process::MergeFrom(from.process());
  }
}

void GetProcessResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetProcessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProcessResponse::CopyFrom(const GetProcessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetProcessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProcessResponse::IsInitialized() const {
  return true;
}

void GetProcessResponse::Swap(GetProcessResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProcessResponse::InternalSwap(GetProcessResponse* other) {
  using std::swap;
  swap(process_, other->process_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProcessResponse::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateProcessRequest::InitAsDefaultInstance() {
  ::_CreateProcessRequest_default_instance_._instance.get_mutable()->process_ = const_cast< ::Process*>(
      ::Process::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateProcessRequest::kProcessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateProcessRequest::CreateProcessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsCreateProcessRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateProcessRequest)
}
CreateProcessRequest::CreateProcessRequest(const CreateProcessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_process()) {
    process_ = new ::Process(*from.process_);
  } else {
    process_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CreateProcessRequest)
}

void CreateProcessRequest::SharedCtor() {
  process_ = NULL;
  _cached_size_ = 0;
}

CreateProcessRequest::~CreateProcessRequest() {
  // @@protoc_insertion_point(destructor:CreateProcessRequest)
  SharedDtor();
}

void CreateProcessRequest::SharedDtor() {
  if (this != internal_default_instance()) delete process_;
}

void CreateProcessRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateProcessRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateProcessRequest& CreateProcessRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsCreateProcessRequest();
  return *internal_default_instance();
}

CreateProcessRequest* CreateProcessRequest::New(::google::protobuf::Arena* arena) const {
  CreateProcessRequest* n = new CreateProcessRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateProcessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateProcessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateProcessRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Process process = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateProcessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateProcessRequest)
  return false;
#undef DO_
}

void CreateProcessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Process process = 1;
  if (this->has_process()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->process_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateProcessRequest)
}

::google::protobuf::uint8* CreateProcessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Process process = 1;
  if (this->has_process()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->process_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateProcessRequest)
  return target;
}

size_t CreateProcessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateProcessRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Process process = 1;
  if (this->has_process()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->process_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateProcessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateProcessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateProcessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateProcessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateProcessRequest)
    MergeFrom(*source);
  }
}

void CreateProcessRequest::MergeFrom(const CreateProcessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_process()) {
    mutable_process()->::Process::MergeFrom(from.process());
  }
}

void CreateProcessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateProcessRequest::CopyFrom(const CreateProcessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProcessRequest::IsInitialized() const {
  return true;
}

void CreateProcessRequest::Swap(CreateProcessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateProcessRequest::InternalSwap(CreateProcessRequest* other) {
  using std::swap;
  swap(process_, other->process_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateProcessRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartProcessRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartProcessRequest::kJobIdFieldNumber;
const int StartProcessRequest::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartProcessRequest::StartProcessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsStartProcessRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StartProcessRequest)
}
StartProcessRequest::StartProcessRequest(const StartProcessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:StartProcessRequest)
}

void StartProcessRequest::SharedCtor() {
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  _cached_size_ = 0;
}

StartProcessRequest::~StartProcessRequest() {
  // @@protoc_insertion_point(destructor:StartProcessRequest)
  SharedDtor();
}

void StartProcessRequest::SharedDtor() {
}

void StartProcessRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartProcessRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartProcessRequest& StartProcessRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsStartProcessRequest();
  return *internal_default_instance();
}

StartProcessRequest* StartProcessRequest::New(::google::protobuf::Arena* arena) const {
  StartProcessRequest* n = new StartProcessRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartProcessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StartProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  _internal_metadata_.Clear();
}

bool StartProcessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StartProcessRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StartProcessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StartProcessRequest)
  return false;
#undef DO_
}

void StartProcessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StartProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->job_id(), output);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StartProcessRequest)
}

::google::protobuf::uint8* StartProcessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StartProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->job_id(), target);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StartProcessRequest)
  return target;
}

size_t StartProcessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StartProcessRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job_id());
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartProcessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StartProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartProcessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartProcessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StartProcessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StartProcessRequest)
    MergeFrom(*source);
  }
}

void StartProcessRequest::MergeFrom(const StartProcessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StartProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void StartProcessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StartProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartProcessRequest::CopyFrom(const StartProcessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StartProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartProcessRequest::IsInitialized() const {
  return true;
}

void StartProcessRequest::Swap(StartProcessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartProcessRequest::InternalSwap(StartProcessRequest* other) {
  using std::swap;
  swap(job_id_, other->job_id_);
  swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartProcessRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FinishProcessRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishProcessRequest::kJobIdFieldNumber;
const int FinishProcessRequest::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishProcessRequest::FinishProcessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sdnmpi_2eproto::InitDefaultsFinishProcessRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FinishProcessRequest)
}
FinishProcessRequest::FinishProcessRequest(const FinishProcessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&job_id_, &from.job_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:FinishProcessRequest)
}

void FinishProcessRequest::SharedCtor() {
  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  _cached_size_ = 0;
}

FinishProcessRequest::~FinishProcessRequest() {
  // @@protoc_insertion_point(destructor:FinishProcessRequest)
  SharedDtor();
}

void FinishProcessRequest::SharedDtor() {
}

void FinishProcessRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishProcessRequest::descriptor() {
  ::protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishProcessRequest& FinishProcessRequest::default_instance() {
  ::protobuf_sdnmpi_2eproto::InitDefaultsFinishProcessRequest();
  return *internal_default_instance();
}

FinishProcessRequest* FinishProcessRequest::New(::google::protobuf::Arena* arena) const {
  FinishProcessRequest* n = new FinishProcessRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishProcessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FinishProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&job_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&job_id_)) + sizeof(rank_));
  _internal_metadata_.Clear();
}

bool FinishProcessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FinishProcessRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FinishProcessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FinishProcessRequest)
  return false;
#undef DO_
}

void FinishProcessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FinishProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->job_id(), output);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FinishProcessRequest)
}

::google::protobuf::uint8* FinishProcessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FinishProcessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->job_id(), target);
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FinishProcessRequest)
  return target;
}

size_t FinishProcessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FinishProcessRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 job_id = 1;
  if (this->job_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job_id());
  }

  // uint32 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishProcessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FinishProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishProcessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishProcessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FinishProcessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FinishProcessRequest)
    MergeFrom(*source);
  }
}

void FinishProcessRequest::MergeFrom(const FinishProcessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FinishProcessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id() != 0) {
    set_job_id(from.job_id());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void FinishProcessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FinishProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishProcessRequest::CopyFrom(const FinishProcessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FinishProcessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishProcessRequest::IsInitialized() const {
  return true;
}

void FinishProcessRequest::Swap(FinishProcessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishProcessRequest::InternalSwap(FinishProcessRequest* other) {
  using std::swap;
  swap(job_id_, other->job_id_);
  swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishProcessRequest::GetMetadata() const {
  protobuf_sdnmpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdnmpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
