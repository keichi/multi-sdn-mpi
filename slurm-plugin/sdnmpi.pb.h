// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdnmpi.proto

#ifndef PROTOBUF_sdnmpi_2eproto__INCLUDED
#define PROTOBUF_sdnmpi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_sdnmpi_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsEmptyImpl();
void InitDefaultsEmpty();
void InitDefaultsJobImpl();
void InitDefaultsJob();
void InitDefaultsProcessImpl();
void InitDefaultsProcess();
void InitDefaultsListJobResponseImpl();
void InitDefaultsListJobResponse();
void InitDefaultsGetJobRequestImpl();
void InitDefaultsGetJobRequest();
void InitDefaultsGetJobResponseImpl();
void InitDefaultsGetJobResponse();
void InitDefaultsCreateJobRequestImpl();
void InitDefaultsCreateJobRequest();
void InitDefaultsStartJobRequestImpl();
void InitDefaultsStartJobRequest();
void InitDefaultsFinishJobRequestImpl();
void InitDefaultsFinishJobRequest();
void InitDefaultsListProcessRequestImpl();
void InitDefaultsListProcessRequest();
void InitDefaultsListProcessResponseImpl();
void InitDefaultsListProcessResponse();
void InitDefaultsGetProcessRequestImpl();
void InitDefaultsGetProcessRequest();
void InitDefaultsGetProcessResponseImpl();
void InitDefaultsGetProcessResponse();
void InitDefaultsCreateProcessRequestImpl();
void InitDefaultsCreateProcessRequest();
void InitDefaultsStartProcessRequestImpl();
void InitDefaultsStartProcessRequest();
void InitDefaultsFinishProcessRequestImpl();
void InitDefaultsFinishProcessRequest();
inline void InitDefaults() {
  InitDefaultsEmpty();
  InitDefaultsJob();
  InitDefaultsProcess();
  InitDefaultsListJobResponse();
  InitDefaultsGetJobRequest();
  InitDefaultsGetJobResponse();
  InitDefaultsCreateJobRequest();
  InitDefaultsStartJobRequest();
  InitDefaultsFinishJobRequest();
  InitDefaultsListProcessRequest();
  InitDefaultsListProcessResponse();
  InitDefaultsGetProcessRequest();
  InitDefaultsGetProcessResponse();
  InitDefaultsCreateProcessRequest();
  InitDefaultsStartProcessRequest();
  InitDefaultsFinishProcessRequest();
}
}  // namespace protobuf_sdnmpi_2eproto
class CreateJobRequest;
class CreateJobRequestDefaultTypeInternal;
extern CreateJobRequestDefaultTypeInternal _CreateJobRequest_default_instance_;
class CreateProcessRequest;
class CreateProcessRequestDefaultTypeInternal;
extern CreateProcessRequestDefaultTypeInternal _CreateProcessRequest_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class FinishJobRequest;
class FinishJobRequestDefaultTypeInternal;
extern FinishJobRequestDefaultTypeInternal _FinishJobRequest_default_instance_;
class FinishProcessRequest;
class FinishProcessRequestDefaultTypeInternal;
extern FinishProcessRequestDefaultTypeInternal _FinishProcessRequest_default_instance_;
class GetJobRequest;
class GetJobRequestDefaultTypeInternal;
extern GetJobRequestDefaultTypeInternal _GetJobRequest_default_instance_;
class GetJobResponse;
class GetJobResponseDefaultTypeInternal;
extern GetJobResponseDefaultTypeInternal _GetJobResponse_default_instance_;
class GetProcessRequest;
class GetProcessRequestDefaultTypeInternal;
extern GetProcessRequestDefaultTypeInternal _GetProcessRequest_default_instance_;
class GetProcessResponse;
class GetProcessResponseDefaultTypeInternal;
extern GetProcessResponseDefaultTypeInternal _GetProcessResponse_default_instance_;
class Job;
class JobDefaultTypeInternal;
extern JobDefaultTypeInternal _Job_default_instance_;
class ListJobResponse;
class ListJobResponseDefaultTypeInternal;
extern ListJobResponseDefaultTypeInternal _ListJobResponse_default_instance_;
class ListProcessRequest;
class ListProcessRequestDefaultTypeInternal;
extern ListProcessRequestDefaultTypeInternal _ListProcessRequest_default_instance_;
class ListProcessResponse;
class ListProcessResponseDefaultTypeInternal;
extern ListProcessResponseDefaultTypeInternal _ListProcessResponse_default_instance_;
class Process;
class ProcessDefaultTypeInternal;
extern ProcessDefaultTypeInternal _Process_default_instance_;
class StartJobRequest;
class StartJobRequestDefaultTypeInternal;
extern StartJobRequestDefaultTypeInternal _StartJobRequest_default_instance_;
class StartProcessRequest;
class StartProcessRequestDefaultTypeInternal;
extern StartProcessRequestDefaultTypeInternal _StartProcessRequest_default_instance_;

enum JobState {
  JOB_PENDING = 0,
  JOB_RUNNING = 1,
  JOB_COMPLETE = 2,
  JobState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JobState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JobState_IsValid(int value);
const JobState JobState_MIN = JOB_PENDING;
const JobState JobState_MAX = JOB_COMPLETE;
const int JobState_ARRAYSIZE = JobState_MAX + 1;

const ::google::protobuf::EnumDescriptor* JobState_descriptor();
inline const ::std::string& JobState_Name(JobState value) {
  return ::google::protobuf::internal::NameOfEnum(
    JobState_descriptor(), value);
}
inline bool JobState_Parse(
    const ::std::string& name, JobState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JobState>(
    JobState_descriptor(), name, value);
}
enum ProcessState {
  PROCESS_PENDING = 0,
  PROCESS_RUNNING = 1,
  PROCESS_COMPLETE = 2,
  ProcessState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProcessState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProcessState_IsValid(int value);
const ProcessState ProcessState_MIN = PROCESS_PENDING;
const ProcessState ProcessState_MAX = PROCESS_COMPLETE;
const int ProcessState_ARRAYSIZE = ProcessState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProcessState_descriptor();
inline const ::std::string& ProcessState_Name(ProcessState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProcessState_descriptor(), value);
}
inline bool ProcessState_Parse(
    const ::std::string& name, ProcessState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProcessState>(
    ProcessState_descriptor(), name, value);
}
// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsEmptyImpl();
};
// -------------------------------------------------------------------

class Job : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Job) */ {
 public:
  Job();
  virtual ~Job();

  Job(const Job& from);

  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job(Job&& from) noexcept
    : Job() {
    *this = ::std::move(from);
  }

  inline Job& operator=(Job&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job* internal_default_instance() {
    return reinterpret_cast<const Job*>(
               &_Job_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Job* other);
  friend void swap(Job& a, Job& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job* New() const PROTOBUF_FINAL { return New(NULL); }

  Job* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Job& from);
  void MergeFrom(const Job& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Job* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string comm_pattern = 5;
  void clear_comm_pattern();
  static const int kCommPatternFieldNumber = 5;
  const ::std::string& comm_pattern() const;
  void set_comm_pattern(const ::std::string& value);
  #if LANG_CXX11
  void set_comm_pattern(::std::string&& value);
  #endif
  void set_comm_pattern(const char* value);
  void set_comm_pattern(const char* value, size_t size);
  ::std::string* mutable_comm_pattern();
  ::std::string* release_comm_pattern();
  void set_allocated_comm_pattern(::std::string* comm_pattern);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 gid = 4;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::uint32 gid() const;
  void set_gid(::google::protobuf::uint32 value);

  // uint32 n_tasks = 6;
  void clear_n_tasks();
  static const int kNTasksFieldNumber = 6;
  ::google::protobuf::uint32 n_tasks() const;
  void set_n_tasks(::google::protobuf::uint32 value);

  // .JobState state = 7;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::JobState state() const;
  void set_state(::JobState value);

  // @@protoc_insertion_point(class_scope:Job)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr comm_pattern_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::uint32 n_tasks_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsJobImpl();
};
// -------------------------------------------------------------------

class Process : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Process) */ {
 public:
  Process();
  virtual ~Process();

  Process(const Process& from);

  inline Process& operator=(const Process& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Process(Process&& from) noexcept
    : Process() {
    *this = ::std::move(from);
  }

  inline Process& operator=(Process&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Process& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Process* internal_default_instance() {
    return reinterpret_cast<const Process*>(
               &_Process_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Process* other);
  friend void swap(Process& a, Process& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Process* New() const PROTOBUF_FINAL { return New(NULL); }

  Process* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Process& from);
  void MergeFrom(const Process& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Process* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string node_name = 4;
  void clear_node_name();
  static const int kNodeNameFieldNumber = 4;
  const ::std::string& node_name() const;
  void set_node_name(const ::std::string& value);
  #if LANG_CXX11
  void set_node_name(::std::string&& value);
  #endif
  void set_node_name(const char* value);
  void set_node_name(const char* value, size_t size);
  ::std::string* mutable_node_name();
  ::std::string* release_node_name();
  void set_allocated_node_name(::std::string* node_name);

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // uint32 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // uint32 node_id = 3;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 3;
  ::google::protobuf::uint32 node_id() const;
  void set_node_id(::google::protobuf::uint32 value);

  // .ProcessState state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::ProcessState state() const;
  void set_state(::ProcessState value);

  // @@protoc_insertion_point(class_scope:Process)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr node_name_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 node_id_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsProcessImpl();
};
// -------------------------------------------------------------------

class ListJobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListJobResponse) */ {
 public:
  ListJobResponse();
  virtual ~ListJobResponse();

  ListJobResponse(const ListJobResponse& from);

  inline ListJobResponse& operator=(const ListJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListJobResponse(ListJobResponse&& from) noexcept
    : ListJobResponse() {
    *this = ::std::move(from);
  }

  inline ListJobResponse& operator=(ListJobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListJobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListJobResponse* internal_default_instance() {
    return reinterpret_cast<const ListJobResponse*>(
               &_ListJobResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListJobResponse* other);
  friend void swap(ListJobResponse& a, ListJobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListJobResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListJobResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListJobResponse& from);
  void MergeFrom(const ListJobResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListJobResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Job jobs = 1;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 1;
  const ::Job& jobs(int index) const;
  ::Job* mutable_jobs(int index);
  ::Job* add_jobs();
  ::google::protobuf::RepeatedPtrField< ::Job >*
      mutable_jobs();
  const ::google::protobuf::RepeatedPtrField< ::Job >&
      jobs() const;

  // @@protoc_insertion_point(class_scope:ListJobResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Job > jobs_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsListJobResponseImpl();
};
// -------------------------------------------------------------------

class GetJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetJobRequest) */ {
 public:
  GetJobRequest();
  virtual ~GetJobRequest();

  GetJobRequest(const GetJobRequest& from);

  inline GetJobRequest& operator=(const GetJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJobRequest(GetJobRequest&& from) noexcept
    : GetJobRequest() {
    *this = ::std::move(from);
  }

  inline GetJobRequest& operator=(GetJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJobRequest* internal_default_instance() {
    return reinterpret_cast<const GetJobRequest*>(
               &_GetJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetJobRequest* other);
  friend void swap(GetJobRequest& a, GetJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetJobRequest& from);
  void MergeFrom(const GetJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsGetJobRequestImpl();
};
// -------------------------------------------------------------------

class GetJobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetJobResponse) */ {
 public:
  GetJobResponse();
  virtual ~GetJobResponse();

  GetJobResponse(const GetJobResponse& from);

  inline GetJobResponse& operator=(const GetJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJobResponse(GetJobResponse&& from) noexcept
    : GetJobResponse() {
    *this = ::std::move(from);
  }

  inline GetJobResponse& operator=(GetJobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJobResponse* internal_default_instance() {
    return reinterpret_cast<const GetJobResponse*>(
               &_GetJobResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetJobResponse* other);
  friend void swap(GetJobResponse& a, GetJobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJobResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetJobResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetJobResponse& from);
  void MergeFrom(const GetJobResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetJobResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Job job = 1;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 1;
  const ::Job& job() const;
  ::Job* release_job();
  ::Job* mutable_job();
  void set_allocated_job(::Job* job);

  // @@protoc_insertion_point(class_scope:GetJobResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Job* job_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsGetJobResponseImpl();
};
// -------------------------------------------------------------------

class CreateJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateJobRequest) */ {
 public:
  CreateJobRequest();
  virtual ~CreateJobRequest();

  CreateJobRequest(const CreateJobRequest& from);

  inline CreateJobRequest& operator=(const CreateJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateJobRequest(CreateJobRequest&& from) noexcept
    : CreateJobRequest() {
    *this = ::std::move(from);
  }

  inline CreateJobRequest& operator=(CreateJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateJobRequest* internal_default_instance() {
    return reinterpret_cast<const CreateJobRequest*>(
               &_CreateJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CreateJobRequest* other);
  friend void swap(CreateJobRequest& a, CreateJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateJobRequest& from);
  void MergeFrom(const CreateJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Job job = 1;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 1;
  const ::Job& job() const;
  ::Job* release_job();
  ::Job* mutable_job();
  void set_allocated_job(::Job* job);

  // @@protoc_insertion_point(class_scope:CreateJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Job* job_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsCreateJobRequestImpl();
};
// -------------------------------------------------------------------

class StartJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StartJobRequest) */ {
 public:
  StartJobRequest();
  virtual ~StartJobRequest();

  StartJobRequest(const StartJobRequest& from);

  inline StartJobRequest& operator=(const StartJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartJobRequest(StartJobRequest&& from) noexcept
    : StartJobRequest() {
    *this = ::std::move(from);
  }

  inline StartJobRequest& operator=(StartJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartJobRequest* internal_default_instance() {
    return reinterpret_cast<const StartJobRequest*>(
               &_StartJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(StartJobRequest* other);
  friend void swap(StartJobRequest& a, StartJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StartJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartJobRequest& from);
  void MergeFrom(const StartJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StartJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsStartJobRequestImpl();
};
// -------------------------------------------------------------------

class FinishJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FinishJobRequest) */ {
 public:
  FinishJobRequest();
  virtual ~FinishJobRequest();

  FinishJobRequest(const FinishJobRequest& from);

  inline FinishJobRequest& operator=(const FinishJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishJobRequest(FinishJobRequest&& from) noexcept
    : FinishJobRequest() {
    *this = ::std::move(from);
  }

  inline FinishJobRequest& operator=(FinishJobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishJobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FinishJobRequest* internal_default_instance() {
    return reinterpret_cast<const FinishJobRequest*>(
               &_FinishJobRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(FinishJobRequest* other);
  friend void swap(FinishJobRequest& a, FinishJobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishJobRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishJobRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishJobRequest& from);
  void MergeFrom(const FinishJobRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishJobRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FinishJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsFinishJobRequestImpl();
};
// -------------------------------------------------------------------

class ListProcessRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListProcessRequest) */ {
 public:
  ListProcessRequest();
  virtual ~ListProcessRequest();

  ListProcessRequest(const ListProcessRequest& from);

  inline ListProcessRequest& operator=(const ListProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProcessRequest(ListProcessRequest&& from) noexcept
    : ListProcessRequest() {
    *this = ::std::move(from);
  }

  inline ListProcessRequest& operator=(ListProcessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProcessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProcessRequest* internal_default_instance() {
    return reinterpret_cast<const ListProcessRequest*>(
               &_ListProcessRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListProcessRequest* other);
  friend void swap(ListProcessRequest& a, ListProcessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProcessRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListProcessRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListProcessRequest& from);
  void MergeFrom(const ListProcessRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListProcessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ListProcessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsListProcessRequestImpl();
};
// -------------------------------------------------------------------

class ListProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListProcessResponse) */ {
 public:
  ListProcessResponse();
  virtual ~ListProcessResponse();

  ListProcessResponse(const ListProcessResponse& from);

  inline ListProcessResponse& operator=(const ListProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProcessResponse(ListProcessResponse&& from) noexcept
    : ListProcessResponse() {
    *this = ::std::move(from);
  }

  inline ListProcessResponse& operator=(ListProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProcessResponse* internal_default_instance() {
    return reinterpret_cast<const ListProcessResponse*>(
               &_ListProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ListProcessResponse* other);
  friend void swap(ListProcessResponse& a, ListProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProcessResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListProcessResponse& from);
  void MergeFrom(const ListProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Process processes = 1;
  int processes_size() const;
  void clear_processes();
  static const int kProcessesFieldNumber = 1;
  const ::Process& processes(int index) const;
  ::Process* mutable_processes(int index);
  ::Process* add_processes();
  ::google::protobuf::RepeatedPtrField< ::Process >*
      mutable_processes();
  const ::google::protobuf::RepeatedPtrField< ::Process >&
      processes() const;

  // @@protoc_insertion_point(class_scope:ListProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Process > processes_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsListProcessResponseImpl();
};
// -------------------------------------------------------------------

class GetProcessRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetProcessRequest) */ {
 public:
  GetProcessRequest();
  virtual ~GetProcessRequest();

  GetProcessRequest(const GetProcessRequest& from);

  inline GetProcessRequest& operator=(const GetProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetProcessRequest(GetProcessRequest&& from) noexcept
    : GetProcessRequest() {
    *this = ::std::move(from);
  }

  inline GetProcessRequest& operator=(GetProcessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProcessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetProcessRequest* internal_default_instance() {
    return reinterpret_cast<const GetProcessRequest*>(
               &_GetProcessRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetProcessRequest* other);
  friend void swap(GetProcessRequest& a, GetProcessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetProcessRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProcessRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProcessRequest& from);
  void MergeFrom(const GetProcessRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProcessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // uint32 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetProcessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::uint32 rank_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsGetProcessRequestImpl();
};
// -------------------------------------------------------------------

class GetProcessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetProcessResponse) */ {
 public:
  GetProcessResponse();
  virtual ~GetProcessResponse();

  GetProcessResponse(const GetProcessResponse& from);

  inline GetProcessResponse& operator=(const GetProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetProcessResponse(GetProcessResponse&& from) noexcept
    : GetProcessResponse() {
    *this = ::std::move(from);
  }

  inline GetProcessResponse& operator=(GetProcessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProcessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetProcessResponse* internal_default_instance() {
    return reinterpret_cast<const GetProcessResponse*>(
               &_GetProcessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetProcessResponse* other);
  friend void swap(GetProcessResponse& a, GetProcessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetProcessResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProcessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProcessResponse& from);
  void MergeFrom(const GetProcessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProcessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Process process = 1;
  bool has_process() const;
  void clear_process();
  static const int kProcessFieldNumber = 1;
  const ::Process& process() const;
  ::Process* release_process();
  ::Process* mutable_process();
  void set_allocated_process(::Process* process);

  // @@protoc_insertion_point(class_scope:GetProcessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Process* process_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsGetProcessResponseImpl();
};
// -------------------------------------------------------------------

class CreateProcessRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateProcessRequest) */ {
 public:
  CreateProcessRequest();
  virtual ~CreateProcessRequest();

  CreateProcessRequest(const CreateProcessRequest& from);

  inline CreateProcessRequest& operator=(const CreateProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateProcessRequest(CreateProcessRequest&& from) noexcept
    : CreateProcessRequest() {
    *this = ::std::move(from);
  }

  inline CreateProcessRequest& operator=(CreateProcessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateProcessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateProcessRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProcessRequest*>(
               &_CreateProcessRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CreateProcessRequest* other);
  friend void swap(CreateProcessRequest& a, CreateProcessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateProcessRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateProcessRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateProcessRequest& from);
  void MergeFrom(const CreateProcessRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateProcessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Process process = 1;
  bool has_process() const;
  void clear_process();
  static const int kProcessFieldNumber = 1;
  const ::Process& process() const;
  ::Process* release_process();
  ::Process* mutable_process();
  void set_allocated_process(::Process* process);

  // @@protoc_insertion_point(class_scope:CreateProcessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Process* process_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsCreateProcessRequestImpl();
};
// -------------------------------------------------------------------

class StartProcessRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StartProcessRequest) */ {
 public:
  StartProcessRequest();
  virtual ~StartProcessRequest();

  StartProcessRequest(const StartProcessRequest& from);

  inline StartProcessRequest& operator=(const StartProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartProcessRequest(StartProcessRequest&& from) noexcept
    : StartProcessRequest() {
    *this = ::std::move(from);
  }

  inline StartProcessRequest& operator=(StartProcessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartProcessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartProcessRequest* internal_default_instance() {
    return reinterpret_cast<const StartProcessRequest*>(
               &_StartProcessRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(StartProcessRequest* other);
  friend void swap(StartProcessRequest& a, StartProcessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartProcessRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StartProcessRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartProcessRequest& from);
  void MergeFrom(const StartProcessRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartProcessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // uint32 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StartProcessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::uint32 rank_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsStartProcessRequestImpl();
};
// -------------------------------------------------------------------

class FinishProcessRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FinishProcessRequest) */ {
 public:
  FinishProcessRequest();
  virtual ~FinishProcessRequest();

  FinishProcessRequest(const FinishProcessRequest& from);

  inline FinishProcessRequest& operator=(const FinishProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishProcessRequest(FinishProcessRequest&& from) noexcept
    : FinishProcessRequest() {
    *this = ::std::move(from);
  }

  inline FinishProcessRequest& operator=(FinishProcessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishProcessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FinishProcessRequest* internal_default_instance() {
    return reinterpret_cast<const FinishProcessRequest*>(
               &_FinishProcessRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(FinishProcessRequest* other);
  friend void swap(FinishProcessRequest& a, FinishProcessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishProcessRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishProcessRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishProcessRequest& from);
  void MergeFrom(const FinishProcessRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishProcessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::uint32 job_id() const;
  void set_job_id(::google::protobuf::uint32 value);

  // uint32 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FinishProcessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 job_id_;
  ::google::protobuf::uint32 rank_;
  mutable int _cached_size_;
  friend struct ::protobuf_sdnmpi_2eproto::TableStruct;
  friend void ::protobuf_sdnmpi_2eproto::InitDefaultsFinishProcessRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// Job

// uint32 id = 1;
inline void Job::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Job::id() const {
  // @@protoc_insertion_point(field_get:Job.id)
  return id_;
}
inline void Job::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Job.id)
}

// string name = 2;
inline void Job::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::name() const {
  // @@protoc_insertion_point(field_get:Job.name)
  return name_.GetNoArena();
}
inline void Job::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Job.name)
}
#if LANG_CXX11
inline void Job::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Job.name)
}
#endif
inline void Job::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Job.name)
}
inline void Job::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Job.name)
}
inline ::std::string* Job::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Job.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_name() {
  // @@protoc_insertion_point(field_release:Job.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Job.name)
}

// uint32 uid = 3;
inline void Job::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 Job::uid() const {
  // @@protoc_insertion_point(field_get:Job.uid)
  return uid_;
}
inline void Job::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:Job.uid)
}

// uint32 gid = 4;
inline void Job::clear_gid() {
  gid_ = 0u;
}
inline ::google::protobuf::uint32 Job::gid() const {
  // @@protoc_insertion_point(field_get:Job.gid)
  return gid_;
}
inline void Job::set_gid(::google::protobuf::uint32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:Job.gid)
}

// string comm_pattern = 5;
inline void Job::clear_comm_pattern() {
  comm_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::comm_pattern() const {
  // @@protoc_insertion_point(field_get:Job.comm_pattern)
  return comm_pattern_.GetNoArena();
}
inline void Job::set_comm_pattern(const ::std::string& value) {
  
  comm_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Job.comm_pattern)
}
#if LANG_CXX11
inline void Job::set_comm_pattern(::std::string&& value) {
  
  comm_pattern_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Job.comm_pattern)
}
#endif
inline void Job::set_comm_pattern(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comm_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Job.comm_pattern)
}
inline void Job::set_comm_pattern(const char* value, size_t size) {
  
  comm_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Job.comm_pattern)
}
inline ::std::string* Job::mutable_comm_pattern() {
  
  // @@protoc_insertion_point(field_mutable:Job.comm_pattern)
  return comm_pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_comm_pattern() {
  // @@protoc_insertion_point(field_release:Job.comm_pattern)
  
  return comm_pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_comm_pattern(::std::string* comm_pattern) {
  if (comm_pattern != NULL) {
    
  } else {
    
  }
  comm_pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comm_pattern);
  // @@protoc_insertion_point(field_set_allocated:Job.comm_pattern)
}

// uint32 n_tasks = 6;
inline void Job::clear_n_tasks() {
  n_tasks_ = 0u;
}
inline ::google::protobuf::uint32 Job::n_tasks() const {
  // @@protoc_insertion_point(field_get:Job.n_tasks)
  return n_tasks_;
}
inline void Job::set_n_tasks(::google::protobuf::uint32 value) {
  
  n_tasks_ = value;
  // @@protoc_insertion_point(field_set:Job.n_tasks)
}

// .JobState state = 7;
inline void Job::clear_state() {
  state_ = 0;
}
inline ::JobState Job::state() const {
  // @@protoc_insertion_point(field_get:Job.state)
  return static_cast< ::JobState >(state_);
}
inline void Job::set_state(::JobState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Job.state)
}

// -------------------------------------------------------------------

// Process

// uint32 job_id = 1;
inline void Process::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 Process::job_id() const {
  // @@protoc_insertion_point(field_get:Process.job_id)
  return job_id_;
}
inline void Process::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:Process.job_id)
}

// uint32 rank = 2;
inline void Process::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 Process::rank() const {
  // @@protoc_insertion_point(field_get:Process.rank)
  return rank_;
}
inline void Process::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:Process.rank)
}

// uint32 node_id = 3;
inline void Process::clear_node_id() {
  node_id_ = 0u;
}
inline ::google::protobuf::uint32 Process::node_id() const {
  // @@protoc_insertion_point(field_get:Process.node_id)
  return node_id_;
}
inline void Process::set_node_id(::google::protobuf::uint32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:Process.node_id)
}

// string node_name = 4;
inline void Process::clear_node_name() {
  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Process::node_name() const {
  // @@protoc_insertion_point(field_get:Process.node_name)
  return node_name_.GetNoArena();
}
inline void Process::set_node_name(const ::std::string& value) {
  
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Process.node_name)
}
#if LANG_CXX11
inline void Process::set_node_name(::std::string&& value) {
  
  node_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Process.node_name)
}
#endif
inline void Process::set_node_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Process.node_name)
}
inline void Process::set_node_name(const char* value, size_t size) {
  
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Process.node_name)
}
inline ::std::string* Process::mutable_node_name() {
  
  // @@protoc_insertion_point(field_mutable:Process.node_name)
  return node_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Process::release_node_name() {
  // @@protoc_insertion_point(field_release:Process.node_name)
  
  return node_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Process::set_allocated_node_name(::std::string* node_name) {
  if (node_name != NULL) {
    
  } else {
    
  }
  node_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), node_name);
  // @@protoc_insertion_point(field_set_allocated:Process.node_name)
}

// .ProcessState state = 5;
inline void Process::clear_state() {
  state_ = 0;
}
inline ::ProcessState Process::state() const {
  // @@protoc_insertion_point(field_get:Process.state)
  return static_cast< ::ProcessState >(state_);
}
inline void Process::set_state(::ProcessState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Process.state)
}

// -------------------------------------------------------------------

// ListJobResponse

// repeated .Job jobs = 1;
inline int ListJobResponse::jobs_size() const {
  return jobs_.size();
}
inline void ListJobResponse::clear_jobs() {
  jobs_.Clear();
}
inline const ::Job& ListJobResponse::jobs(int index) const {
  // @@protoc_insertion_point(field_get:ListJobResponse.jobs)
  return jobs_.Get(index);
}
inline ::Job* ListJobResponse::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:ListJobResponse.jobs)
  return jobs_.Mutable(index);
}
inline ::Job* ListJobResponse::add_jobs() {
  // @@protoc_insertion_point(field_add:ListJobResponse.jobs)
  return jobs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Job >*
ListJobResponse::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:ListJobResponse.jobs)
  return &jobs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Job >&
ListJobResponse::jobs() const {
  // @@protoc_insertion_point(field_list:ListJobResponse.jobs)
  return jobs_;
}

// -------------------------------------------------------------------

// GetJobRequest

// uint32 id = 1;
inline void GetJobRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 GetJobRequest::id() const {
  // @@protoc_insertion_point(field_get:GetJobRequest.id)
  return id_;
}
inline void GetJobRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:GetJobRequest.id)
}

// -------------------------------------------------------------------

// GetJobResponse

// .Job job = 1;
inline bool GetJobResponse::has_job() const {
  return this != internal_default_instance() && job_ != NULL;
}
inline void GetJobResponse::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
}
inline const ::Job& GetJobResponse::job() const {
  const ::Job* p = job_;
  // @@protoc_insertion_point(field_get:GetJobResponse.job)
  return p != NULL ? *p : *reinterpret_cast<const ::Job*>(
      &::_Job_default_instance_);
}
inline ::Job* GetJobResponse::release_job() {
  // @@protoc_insertion_point(field_release:GetJobResponse.job)
  
  ::Job* temp = job_;
  job_ = NULL;
  return temp;
}
inline ::Job* GetJobResponse::mutable_job() {
  
  if (job_ == NULL) {
    job_ = new ::Job;
  }
  // @@protoc_insertion_point(field_mutable:GetJobResponse.job)
  return job_;
}
inline void GetJobResponse::set_allocated_job(::Job* job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete job_;
  }
  if (job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job, submessage_arena);
    }
    
  } else {
    
  }
  job_ = job;
  // @@protoc_insertion_point(field_set_allocated:GetJobResponse.job)
}

// -------------------------------------------------------------------

// CreateJobRequest

// .Job job = 1;
inline bool CreateJobRequest::has_job() const {
  return this != internal_default_instance() && job_ != NULL;
}
inline void CreateJobRequest::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
}
inline const ::Job& CreateJobRequest::job() const {
  const ::Job* p = job_;
  // @@protoc_insertion_point(field_get:CreateJobRequest.job)
  return p != NULL ? *p : *reinterpret_cast<const ::Job*>(
      &::_Job_default_instance_);
}
inline ::Job* CreateJobRequest::release_job() {
  // @@protoc_insertion_point(field_release:CreateJobRequest.job)
  
  ::Job* temp = job_;
  job_ = NULL;
  return temp;
}
inline ::Job* CreateJobRequest::mutable_job() {
  
  if (job_ == NULL) {
    job_ = new ::Job;
  }
  // @@protoc_insertion_point(field_mutable:CreateJobRequest.job)
  return job_;
}
inline void CreateJobRequest::set_allocated_job(::Job* job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete job_;
  }
  if (job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job, submessage_arena);
    }
    
  } else {
    
  }
  job_ = job;
  // @@protoc_insertion_point(field_set_allocated:CreateJobRequest.job)
}

// -------------------------------------------------------------------

// StartJobRequest

// uint32 id = 1;
inline void StartJobRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 StartJobRequest::id() const {
  // @@protoc_insertion_point(field_get:StartJobRequest.id)
  return id_;
}
inline void StartJobRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:StartJobRequest.id)
}

// -------------------------------------------------------------------

// FinishJobRequest

// uint32 id = 1;
inline void FinishJobRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 FinishJobRequest::id() const {
  // @@protoc_insertion_point(field_get:FinishJobRequest.id)
  return id_;
}
inline void FinishJobRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:FinishJobRequest.id)
}

// -------------------------------------------------------------------

// ListProcessRequest

// uint32 job_id = 1;
inline void ListProcessRequest::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 ListProcessRequest::job_id() const {
  // @@protoc_insertion_point(field_get:ListProcessRequest.job_id)
  return job_id_;
}
inline void ListProcessRequest::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:ListProcessRequest.job_id)
}

// -------------------------------------------------------------------

// ListProcessResponse

// repeated .Process processes = 1;
inline int ListProcessResponse::processes_size() const {
  return processes_.size();
}
inline void ListProcessResponse::clear_processes() {
  processes_.Clear();
}
inline const ::Process& ListProcessResponse::processes(int index) const {
  // @@protoc_insertion_point(field_get:ListProcessResponse.processes)
  return processes_.Get(index);
}
inline ::Process* ListProcessResponse::mutable_processes(int index) {
  // @@protoc_insertion_point(field_mutable:ListProcessResponse.processes)
  return processes_.Mutable(index);
}
inline ::Process* ListProcessResponse::add_processes() {
  // @@protoc_insertion_point(field_add:ListProcessResponse.processes)
  return processes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Process >*
ListProcessResponse::mutable_processes() {
  // @@protoc_insertion_point(field_mutable_list:ListProcessResponse.processes)
  return &processes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Process >&
ListProcessResponse::processes() const {
  // @@protoc_insertion_point(field_list:ListProcessResponse.processes)
  return processes_;
}

// -------------------------------------------------------------------

// GetProcessRequest

// uint32 job_id = 1;
inline void GetProcessRequest::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 GetProcessRequest::job_id() const {
  // @@protoc_insertion_point(field_get:GetProcessRequest.job_id)
  return job_id_;
}
inline void GetProcessRequest::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:GetProcessRequest.job_id)
}

// uint32 rank = 2;
inline void GetProcessRequest::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 GetProcessRequest::rank() const {
  // @@protoc_insertion_point(field_get:GetProcessRequest.rank)
  return rank_;
}
inline void GetProcessRequest::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:GetProcessRequest.rank)
}

// -------------------------------------------------------------------

// GetProcessResponse

// .Process process = 1;
inline bool GetProcessResponse::has_process() const {
  return this != internal_default_instance() && process_ != NULL;
}
inline void GetProcessResponse::clear_process() {
  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
}
inline const ::Process& GetProcessResponse::process() const {
  const ::Process* p = process_;
  // @@protoc_insertion_point(field_get:GetProcessResponse.process)
  return p != NULL ? *p : *reinterpret_cast<const ::Process*>(
      &::_Process_default_instance_);
}
inline ::Process* GetProcessResponse::release_process() {
  // @@protoc_insertion_point(field_release:GetProcessResponse.process)
  
  ::Process* temp = process_;
  process_ = NULL;
  return temp;
}
inline ::Process* GetProcessResponse::mutable_process() {
  
  if (process_ == NULL) {
    process_ = new ::Process;
  }
  // @@protoc_insertion_point(field_mutable:GetProcessResponse.process)
  return process_;
}
inline void GetProcessResponse::set_allocated_process(::Process* process) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete process_;
  }
  if (process) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process, submessage_arena);
    }
    
  } else {
    
  }
  process_ = process;
  // @@protoc_insertion_point(field_set_allocated:GetProcessResponse.process)
}

// -------------------------------------------------------------------

// CreateProcessRequest

// .Process process = 1;
inline bool CreateProcessRequest::has_process() const {
  return this != internal_default_instance() && process_ != NULL;
}
inline void CreateProcessRequest::clear_process() {
  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
}
inline const ::Process& CreateProcessRequest::process() const {
  const ::Process* p = process_;
  // @@protoc_insertion_point(field_get:CreateProcessRequest.process)
  return p != NULL ? *p : *reinterpret_cast<const ::Process*>(
      &::_Process_default_instance_);
}
inline ::Process* CreateProcessRequest::release_process() {
  // @@protoc_insertion_point(field_release:CreateProcessRequest.process)
  
  ::Process* temp = process_;
  process_ = NULL;
  return temp;
}
inline ::Process* CreateProcessRequest::mutable_process() {
  
  if (process_ == NULL) {
    process_ = new ::Process;
  }
  // @@protoc_insertion_point(field_mutable:CreateProcessRequest.process)
  return process_;
}
inline void CreateProcessRequest::set_allocated_process(::Process* process) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete process_;
  }
  if (process) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process, submessage_arena);
    }
    
  } else {
    
  }
  process_ = process;
  // @@protoc_insertion_point(field_set_allocated:CreateProcessRequest.process)
}

// -------------------------------------------------------------------

// StartProcessRequest

// uint32 job_id = 1;
inline void StartProcessRequest::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 StartProcessRequest::job_id() const {
  // @@protoc_insertion_point(field_get:StartProcessRequest.job_id)
  return job_id_;
}
inline void StartProcessRequest::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:StartProcessRequest.job_id)
}

// uint32 rank = 2;
inline void StartProcessRequest::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 StartProcessRequest::rank() const {
  // @@protoc_insertion_point(field_get:StartProcessRequest.rank)
  return rank_;
}
inline void StartProcessRequest::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:StartProcessRequest.rank)
}

// -------------------------------------------------------------------

// FinishProcessRequest

// uint32 job_id = 1;
inline void FinishProcessRequest::clear_job_id() {
  job_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishProcessRequest::job_id() const {
  // @@protoc_insertion_point(field_get:FinishProcessRequest.job_id)
  return job_id_;
}
inline void FinishProcessRequest::set_job_id(::google::protobuf::uint32 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:FinishProcessRequest.job_id)
}

// uint32 rank = 2;
inline void FinishProcessRequest::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 FinishProcessRequest::rank() const {
  // @@protoc_insertion_point(field_get:FinishProcessRequest.rank)
  return rank_;
}
inline void FinishProcessRequest::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:FinishProcessRequest.rank)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::JobState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JobState>() {
  return ::JobState_descriptor();
}
template <> struct is_proto_enum< ::ProcessState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProcessState>() {
  return ::ProcessState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sdnmpi_2eproto__INCLUDED
